<template>
	<view class="simple-address" v-if="showPopup" @touchmove.stop.prevent="clear">
		<!-- 遮罩层 -->
		<view class="simple-address-mask" @touchmove.stop.prevent="clear" v-if="maskClick" :class="[ani+'-mask', animation ? 'mask-ani' : '']" :style="{
					'background-color': maskBgColor
				}"
		 @tap="hideMask(true)"></view>

		<view class="simple-address-content simple-address--fixed" :class="[type,ani+'-content', animation ? 'content-ani' : '']">
			<view class="simple-address__header">
				<view class="simple-address__header-btn-box" @click="pickerCancel">
					<text class="simple-address__header-text">取消</text>
				</view>
				<view class="simple-address__header-btn-box" @click="pickerConfirm">
					<text class="simple-address__header-text" :style="{color:themeColor}">确定</text>
				</view>
			</view>
			<view class="simple-address__box">
				<picker-view indicator-style="height: 70rpx;" class="simple-address-view" :value="pickerValueDefault" @change="pickerChange">

					<picker-view-column>
						<!-- #ifndef APP-NVUE -->
						<view class="picker-item" v-for="(item,index) in provinceDataList" :key="index">{{item.label}}</view>
						<!-- #endif -->
						<!-- #ifdef APP-NVUE -->
						<text class="picker-item" v-for="(item,index) in provinceDataList" :key="index">{{item.label}}</text>
						<!-- #endif -->
					</picker-view-column>
					<picker-view-column>
						<!-- #ifndef APP-NVUE -->
						<view class="picker-item" v-for="(item,index) in cityDataList" :key="index">{{item.label}}</view>
						<!-- #endif -->
						<!-- #ifdef APP-NVUE -->
						<text class="picker-item" v-for="(item,index) in cityDataList" :key="index">{{item.label}}</text>
						<!-- #endif -->

					</picker-view-column>
					<picker-view-column>
						<!-- #ifndef APP-NVUE -->
						<view class="picker-item" v-for="(item,index) in areaDataList" :key="index">{{item.label}}</view>
						<!-- #endif -->
						<!-- #ifdef APP-NVUE -->
						<text class="picker-item" v-for="(item,index) in areaDataList" :key="index">{{item.label}}</text>
						<!-- #endif -->

					</picker-view-column>

				</picker-view>
			</view>
		</view>

	</view>
</template>

<script>
	// import provinceData from './city-data/province.js';
	// import cityData from './city-data/city.js';
	// import areaData from './city-data/area.js';
	var provinceData = [];
	var cityData = [];
	var areaData = [];
	export default {
		name: "simpleAddress",
		props: {
			// 开启动画
			animation: {
				type: Boolean,
				default: true
			},
			/* 弹出层类型，可选值；
				bottom：底部弹出层
			*/
			type: {
				type: String,
				default: 'bottom'
			},
			// maskClick
			maskClick: {
				type: Boolean,
				default: true
			},
			show: {
				type: Boolean,
				default: true
			},
			maskBgColor: {
				type: String,
				default: 'rgba(0, 0, 0, 0.4)', //背景颜色 rgba(0, 0, 0, 0.4) 为空则调用 uni.scss
			},
			themeColor: {
				type: String,
				default: '', // 主题色
			},
			/* 默认值 */
			pickerValueDefault: {
				type: Array,
				default () {
					return [0, 0, 0]
				}
			},
		},
		data() {
			return {
				ani: '',
				showPopup: false,
				pickerValue: [0, 0, 0],
				provinceDataList: [],
				cityDataList: [],
				areaDataList: []
			}
		},
		watch: {
			show(newValue) {
				if (newValue) {
					this.open()
				} else {
					this.close()
				}
			},
			pickerValueDefault() {
				this.init();
			}
		},
		created() {
			this.$http.getAddressArea().then((data)=>{
				uni.setStorageSync('address',data.data);
			})
			this.init()
		},
		methods: {
			init() {
				provinceData = uni.getStorageSync('address');
				console.log(provinceData);
				var provinces_arr = [];
				var citys_arr = [];
				var areas_arr = [];
				
				for (let i = 0; i < provinceData.length; i++) {
					provinces_arr.push({
						value: provinceData[i].value,
						label: provinceData[i].label
					})
				}
				var arr1 = [];
				for (let i = 0; i < provinceData.length; i++) {
					arr1 = [];
					for (let j = 0; j < provinceData[i].city.length; j++) {
						arr1.push({
							value: provinceData[i].city[j].value,
							label: provinceData[i].city[j].label
						})
					}
					citys_arr.push(arr1)
				}
				
				var arr2 = [];
				var arr3 = [];
				for (let i = 0; i < provinceData.length; i++) {
					arr2 = [];
					for (let j = 0; j < provinceData[i].city.length; j++) {
						arr3 = [];
						for(let x = 0;x < provinceData[i].city[j].area.length; x++){
							arr3.push({
								value: provinceData[i].city[j].area[x].value,
								label: provinceData[i].city[j].area[x].label
							})
						}
						arr2.push(arr3)
					}
					areas_arr.push(arr2)
				}
				console.log(provinces_arr,citys_arr,areas_arr);
				
				// for(let i in provinceData){
				// 	this.provinceDataList.push({
				// 		value: provinceData[i].value,
				// 		label: provinceData[i].label
				// 	})
				// 	for(let j in provinceData[i].city){
				// 		// cityData[i] = provinceData[i].city
				// 		this.cityDataList.push({
				// 			value: provinceData[i].city[j].value,
				// 			label: provinceData[i].city[j].label
				// 		})
				// 		for(let x in provinceData[i].city[j].area){
				// 			// areaData[i] = provinceData[i].city[j].area
				// 			this.areaDataList.push({
				// 				value: provinceData[i].city[j].area[x].value,
				// 				label: provinceData[i].city[j].area[x].label
				// 			})
				// 		}
				// 	}
				// }
				// console.log(JSON.parse(JSON.stringify(cityData)));
				// this.handPickValueDefault(); // 对 pickerValueDefault 做兼容处理
				// this.provinceDataList = provinceData;
				// cityData = JSON.parse(JSON.stringify(cityData));
						// console.log(cityData);
				this.provinceDataList = provinces_arr;
				this.cityDataList = citys_arr;
				this.areaDataList = areas_arr;
				this.pickerValue = this.pickerValueDefault;
				console.log(this.provinceDataList,this.cityDataList,this.areaDataList);
			},
			handPickValueDefault() {
				if (this.pickerValueDefault !== [0, 0, 0]) {
					if (this.pickerValueDefault[0] > provinceData.length - 1) {
						this.pickerValueDefault[0] = provinceData.length - 1;
					}
					if (this.pickerValueDefault[1] > cityData.length - 1) {
						this.pickerValueDefault[1] = cityData.length - 1;
					}
					if (this.pickerValueDefault[2] > areaData.length - 1) {
						this.pickerValueDefault[2] = areaData.length - 1;
					}
				}
			},
			pickerChange(e) {
				let changePickerValue = e.detail.value;
				this.pickerValue = changePickerValue;
				this._$emit('onChange');
			},
			_$emit(emitName) {
				let pickObj = {
					label: this._getLabel(),
					value: this.pickerValue,
					cityCode: this._getCityCode(),
					areaCode: this._getAreaCode(),
					provinceCode: this._getProvinceCode()
				};
				this.$emit(emitName, pickObj);
			},
			_getLabel() {
				let pcikerLabel =
					this.provinceDataList[this.pickerValue[0]].label +
					'-' +
					this.cityDataList[this.pickerValue[1]].label +
					'-' +
					this.areaDataList[this.pickerValue[2]].label;
				return pcikerLabel;
			},
			_getCityCode() {
				return this.cityDataList[this.pickerValue[1]].value;
			},
			_getProvinceCode() {
				return this.provinceDataList[this.pickerValue[0]].value;
			},
			_getAreaCode() {
				return this.areaDataList[this.pickerValue[2]].value;
			},
			clear() {

			},
			hideMask() {
				this._$emit('onCancel');
				this.close();
			},
			pickerCancel() {
				this._$emit('onCancel');
				this.close();
			},
			pickerConfirm() {
				this._$emit('onConfirm');
				this.close();
			},
			open() {
				this.showPopup = true
				this.$nextTick(() => {
					setTimeout(() => {
						this.ani = 'simple-' + this.type
					}, 100)
				})
			},
			close(type) {
				if (!this.maskClick && type) return;
				this.ani = ''
				this.$nextTick(() => {
					setTimeout(() => {
						this.showPopup = false
					}, 300)
				})
			}
		}
	}
</script>

<style lang="scss" scoped>
	.simple-address {
		/* #ifndef APP-NVUE */
		display: flex;
		/* #endif */
		flex-direction: column;
	}

	.simple-address-mask {
		position: fixed;
		bottom: 0;
		top: 0;
		left: 0;
		right: 0;

		transition-property: opacity;
		transition-duration: 0.3s;
		opacity: 0;
		/* #ifndef APP-NVUE */
		z-index: 99;
		/* #endif */
	}


	.mask-ani {
		transition-property: opacity;
		transition-duration: 0.2s;
	}

	.simple-bottom-mask {
		opacity: 1;
	}

	.simple-center-mask {
		opacity: 1;
	}

	.simple-address--fixed {
		position: fixed;
		bottom: 0;
		left: 0;
		right: 0;
		transition-property: transform;
		transition-duration: 0.3s;
		transform: translateY(460rpx);
		/* #ifndef APP-NVUE */
		z-index: 99;
		/* #endif */
	}

	.simple-address-content {
		background-color: #FFFFFF;
	}

	.simple-content-bottom {
		bottom: 0;
		left: 0;
		right: 0;
		transform: translateY(500rpx);
	}

	.content-ani {
		transition-property: transform, opacity;
		transition-duration: 0.2s;
	}

	.simple-bottom-content {
		transform: translateY(0);
	}

	.simple-center-content {
		transform: scale(1);
		opacity: 1;
	}

	.simple-address__header {
		position: relative;
		/* #ifndef APP-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		flex-wrap: nowrap;
		justify-content: space-between;
		border-bottom-color: #f2f2f2;
		border-bottom-style: solid;
		border-bottom-width: 1rpx;
	}

	.simple-address--fixed-top {
		/* #ifndef APP-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		justify-content: space-between;
		border-top-color: $uni-border-color;
		border-top-style: solid;
		border-top-width: 1rpx;
	}

	.simple-address__header-btn-box {
		/* #ifndef APP-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
		justify-content: center;
		height: 70rpx;
	}

	.simple-address__header-text {
		text-align: center;
		font-size: $uni-font-size-base;
		color: #999;
		line-height: 70rpx;
		padding-left: 40rpx;
		padding-right: 40rpx;
	}

	.simple-address__box {
		position: relative;
	}

	.simple-address-view {
		position: relative;
		bottom: 0;
		left: 0;
		/* #ifndef APP-NVUE */
		width: 100%;
		/* #endif */
		/* #ifdef APP-NVUE */
		width: 750rpx;
		/* #endif */
		height: 408rpx;
		background-color: rgba(255, 255, 255, 1);
	}

	.picker-item {
		text-align: center;
		line-height: 70rpx;
		text-overflow: ellipsis;
		font-size: 28rpx;
	}
</style>
